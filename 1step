import numpy as np
import pandas as pd
from sklearn.feature_selection import f_classif
from statsmodels.stats.multitest import multipletests
import matplotlib.pyplot as plt

def load_apk_data(malicious_file, legitimate_file):
    """
    Загрузка данных из файлов
    Формат файлов: имя_файла coeff1 coeff2 ... coeff10
    """
    def load_file(filename):
        with open(filename, 'r') as f:
            return np.array([list(map(float, line.strip().split()[1:11])) for line in f])
    
    X_malicious = load_file(malicious_file)
    X_legitimate = load_file(legitimate_file)
    X = np.vstack([X_malicious, X_legitimate])
    y = np.array([1]*len(X_malicious) + [0]*len(X_legitimate))
    return X, y

def anova_with_fdr(X, y, alpha=0.05):
    """
    ANOVA с поправкой на множественное тестирование
    Возвращает DataFrame с результатами
    """
    # 1. Проводим ANOVA
    F_values, p_values = f_classif(X, y)
    
    # 2. Поправка Бенджамини-Хохберга
    rejected, corrected_p, _, _ = multipletests(p_values, alpha=alpha, method='fdr_bh')
    
    # 3. Создаем таблицу результатов
    results = pd.DataFrame({
        'Коэффициент': range(1, X.shape[1]+1),
        'F-значение': F_values,
        'p-значение': p_values,
        'p-значение (скоррект.)': corrected_p,
        'Отобрать': rejected
    })
    
    return results

def plot_significant_coeffs(X, y, significant_coeffs):
    """Визуализация значимых коэффициентов"""
    plt.figure(figsize=(12, 6))
    for i, coeff in enumerate(significant_coeffs, 1):
        plt.subplot(2, 3, i)
        plt.boxplot([X[y==1, coeff-1], X[y==0, coeff-1]], 
                   labels=['Зловредные', 'Легитимные'])
        plt.title(f'Коэффициент {coeff}')
    plt.tight_layout()
    plt.savefig('significant_coefficients.png')
    plt.close()

if __name__ == "__main__":
    # 1. Загрузка данных
    X, y = load_apk_data('malicious.txt', 'legitimate.txt')
    
    # 2. Проведение ANOVA с поправкой
    results = anova_with_fdr(X, y)
    print("Результаты ANOVA с поправкой Бенджамини-Хохберга:")
    print(results.sort_values('p-значение (скоррект.)'))
    
    # 3. Выбор значимых коэффициентов (p < 0.05 после поправки)
    significant = results[results['Отобрать']]['Коэффициент'].values
    print("\nЗначимые коэффициенты:", significant)
    
    # 4. Визуализация
    if len(significant) > 0:
        plot_significant_coeffs(X, y, significant)
        print("Графики сохранены в significant_coefficients.png")
    
    # 5. Сохранение результатов
    results.to_csv('anova_results.csv', index=False)
    print("Полные результаты сохранены в anova_results.csv") 
